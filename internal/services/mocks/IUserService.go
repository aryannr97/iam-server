// Code generated by mockery v2.7.4. DO NOT EDIT.

package mocks

import (
	models "github.com/aryannr97/iam-server/models"
	mock "github.com/stretchr/testify/mock"
)

// MockUserService is an autogenerated mock type for the IUserService type
type MockUserService struct {
	mock.Mock
}

// AddUser provides a mock function with given fields: _a0
func (_m *MockUserService) AddUser(_a0 models.AddUserRequest) (*models.AddUserResponse, error) {
	ret := _m.Called(_a0)

	var r0 *models.AddUserResponse
	if rf, ok := ret.Get(0).(func(models.AddUserRequest) *models.AddUserResponse); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.AddUserResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(models.AddUserRequest) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteUser provides a mock function with given fields: _a0
func (_m *MockUserService) DeleteUser(_a0 string) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetUser provides a mock function with given fields: _a0
func (_m *MockUserService) GetUser(_a0 string) (*models.UserDetailsResponse, error) {
	ret := _m.Called(_a0)

	var r0 *models.UserDetailsResponse
	if rf, ok := ret.Get(0).(func(string) *models.UserDetailsResponse); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.UserDetailsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateUser provides a mock function with given fields: _a0, _a1
func (_m *MockUserService) UpdateUser(_a0 string, _a1 models.UpdateUserRequest) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, models.UpdateUserRequest) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
